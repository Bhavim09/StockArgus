{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport ls from 'localstorage-slim';\nlet StocksComponent = class StocksComponent {\n  constructor(backservice, router, toastr) {\n    this.backservice = backservice;\n    this.router = router;\n    this.toastr = toastr;\n    this.stock = '';\n    this.click = 0;\n    this.price = 0;\n    this.condition = false;\n    this.stocknames = [{\n      name: 'Google',\n      sname: 'goog'\n    }, {\n      name: 'IBM',\n      sname: 'IBM'\n    }, {\n      name: 'Jhonson and Jhonson',\n      sname: 'jnj'\n    }, {\n      name: 'Apple, Inc.',\n      sname: 'aapl'\n    }, {\n      name: 'Microsoft Corporation',\n      sname: 'msft'\n    }, {\n      name: 'Amazon.com Inc.',\n      sname: 'amzn'\n    }, {\n      name: 'NVIDIA Corporation',\n      sname: 'nvda'\n    }, {\n      name: 'JPMorgan Chase & Co.',\n      sname: 'jpm'\n    }, {\n      name: 'Visa, Inc.',\n      sname: 'v'\n    }, {\n      name: 'MasterCard Inc.',\n      sname: 'ma'\n    }, {\n      name: 'Tesla, Inc.',\n      sname: 'tsla'\n    }];\n  }\n  ngOnInit() {\n    if (ls.get('#qwAs?.,s', {\n      decrypt: true,\n      secret: 88\n    }) == '') {\n      this.router.navigateByUrl('/');\n    }\n    this.email = ls.get('#qwAs?.,s', {\n      decrypt: true,\n      secret: 88\n    });\n    console.log(this.email);\n    this.myForm = new FormGroup({\n      stock: new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z ]*$')]),\n      qty: new FormControl('', [Validators.required, Validators.minLength(1)])\n    });\n  }\n  getChangeClass(changePercent) {\n    const value = parseFloat(changePercent);\n    if (value > 0) {\n      return 'positive';\n    } else if (value < 0) {\n      return 'negative';\n    }\n    return '';\n  }\n  // ************************ SHOW PRICE FUNCTION ***********************************\n  show_price(Form) {\n    console.log('Before subscribe');\n    this.stock = Form.value.stock;\n    // Previous Logic\n    // const get = new Promise<any>((resolve, _reject) => {\n    //   this.backservice.getprice(Form.value.stock).subscribe(\n    //     {\n    //       next: res => resolve(res)\n    //     }\n    //   )\n    // })\n    // get.then((value) => {\n    //   this.val$ = value;\n    //   this.price = parseInt(this.val$[\"Global Quote\"][\"05. price\"]) * 79;\n    // })\n    // New Logic\n    this.backservice.getprice(Form.value.stock).subscribe(values => {\n      this.val$ = values;\n      // console.log(values[\"Global Quote\"]);\n      this.stockData = values[\"Global Quote\"];\n      console.log(this.stockData);\n      this.price = parseInt(this.val$['Global Quote']['05. price']) * 79;\n      this.condition = true;\n    });\n  }\n  // ************************** ADD USER BUYING FUNCTION *************************\n  add_userdetail(Form) {\n    let pricef;\n    console.log(typeof Form.value.qty);\n    this.backservice.getprice(Form.value.stock).subscribe(value => {\n      this.val$ = value;\n      pricef = Form.value.qty * parseInt(this.val$['Global Quote']['05. price']) * 79;\n      this.backservice.adduser(this.email, Form.value.stock, Form.value.qty, pricef).subscribe(value1 => {\n        console.log(value1);\n        if (value1['inres'] == 'successfully updated') {\n          this.toastr.success('Stock purchase successful!');\n          if (this.click == 1) {\n            document.getElementById('forclickremove1')?.remove();\n            document.getElementById('forclickremove2')?.remove();\n            this.click = 0;\n            this.status();\n            this.myForm.reset();\n          }\n        } else {\n          this.toastr.error('Select correct stock!');\n          Form.reset();\n        }\n      });\n    });\n  }\n  //*********************** GET THE STATUS OF USER BUYING FUNCTION ***************************\n  status() {\n    this.router.navigateByUrl('/status');\n  }\n  // ****************************** SELL STOCK FUNCTION **********************************\n  sellstock(Form) {\n    let color = 'danger';\n    let quote = 'loss';\n    this.backservice.sell(this.email, Form.value.stock, Form.value.qty).subscribe(value => {\n      if (value['pl'] != 'Please enter correct name or qty') {\n        this.pl = value['pl'];\n        console.log(typeof value['pl']);\n        if (parseInt(this.pl) > 0) {\n          color = 'success';\n          quote = 'profit';\n        }\n        const box = document.getElementById('pl');\n        const el = document.createElement('li');\n        el.setAttribute('class', `list-group-item list-group-item-${color}`);\n        el.innerHTML = `You have sell on the ${quote} of ${this.pl}`;\n        box?.append(el);\n        Form.reset();\n        if (this.click == 1) {\n          document.getElementById('forclickremove1')?.remove();\n          document.getElementById('forclickremove2')?.remove();\n          this.click = 0;\n          this.status();\n        }\n      } else {\n        const box1 = document.getElementById('alertnq');\n        const el1 = document.createElement('div');\n        el1.innerHTML = ` <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            Please enter correct name or quantity\n           <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n         </div>`;\n        box1?.append(el1);\n        Form.reset();\n      }\n    });\n  }\n  // ********************** LOGOUT FUNCTION ***********************************\n  logout() {\n    ls.remove('#qwAs?.,s');\n    ls.remove('qsc@1!%^36');\n    this.router.navigateByUrl('/');\n  }\n};\nStocksComponent = __decorate([Component({\n  selector: 'app-stocks',\n  templateUrl: './stocks.component.html',\n  styleUrls: ['./stocks.component.css']\n})], StocksComponent);\nexport { StocksComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","ls","StocksComponent","constructor","backservice","router","toastr","stock","click","price","condition","stocknames","name","sname","ngOnInit","get","decrypt","secret","navigateByUrl","email","console","log","myForm","required","pattern","qty","minLength","getChangeClass","changePercent","value","parseFloat","show_price","Form","getprice","subscribe","values","val$","stockData","parseInt","add_userdetail","pricef","adduser","value1","success","document","getElementById","remove","status","reset","error","sellstock","color","quote","sell","pl","box","el","createElement","setAttribute","innerHTML","append","box1","el1","logout","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/bhavi/StockArgus/src/app/stocks/stocks.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackService } from '../back.service';\nimport { ToastrService } from 'ngx-toastr';\nimport ls from 'localstorage-slim';\nimport { Chart, registerables } from 'chart.js';\n\n@Component({\n  selector: 'app-stocks',\n  templateUrl: './stocks.component.html',\n  styleUrls: ['./stocks.component.css'],\n})\nexport class StocksComponent implements OnInit {\n  val$: any;  \n  stock = '';\n  myForm!: FormGroup;\n  email: any;\n  click = 0;\n  price = 0;\n  pl: any;\n  condition=false;\n  stocknames = [\n    { name: 'Google', sname: 'goog' },\n    { name: 'IBM', sname: 'IBM' },\n    { name: 'Jhonson and Jhonson', sname: 'jnj' },\n    { name: 'Apple, Inc.', sname: 'aapl' },\n    { name: 'Microsoft Corporation', sname: 'msft' },\n    { name: 'Amazon.com Inc.', sname: 'amzn' },\n    { name: 'NVIDIA Corporation', sname: 'nvda' },\n    { name: 'JPMorgan Chase & Co.', sname: 'jpm' },\n    { name: 'Visa, Inc.', sname: 'v' },\n    { name: 'MasterCard Inc.', sname: 'ma' },\n    { name: 'Tesla, Inc.', sname: 'tsla' },\n  ];\n  stockData:any;\n  constructor(\n    private backservice: BackService,\n    private router: Router,\n    private toastr: ToastrService\n  ) {\n  }\n\n  ngOnInit(): void {\n    if (ls.get('#qwAs?.,s', { decrypt: true, secret: 88 }) == '') {\n      this.router.navigateByUrl('/');\n    }\n    this.email = ls.get('#qwAs?.,s', { decrypt: true, secret: 88 });\n    console.log(this.email);\n    this.myForm = new FormGroup({\n      stock: new FormControl('', [\n        Validators.required,\n        Validators.pattern('^[a-zA-Z ]*$'),\n      ]),\n      qty: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    });\n  }\n\n  getChangeClass(changePercent: string) {\n    const value = parseFloat(changePercent);\n\n    if (value > 0) {\n      return 'positive';\n    } else if (value < 0) {\n      return 'negative';\n    }\n\n    return '';\n  }\n  // ************************ SHOW PRICE FUNCTION ***********************************\n\n  show_price(Form: FormGroup) {\n    console.log('Before subscribe');\n    this.stock = Form.value.stock;\n\n    // Previous Logic\n\n    // const get = new Promise<any>((resolve, _reject) => {\n    //   this.backservice.getprice(Form.value.stock).subscribe(\n    //     {\n    //       next: res => resolve(res)\n    //     }\n    //   )\n    // })\n    // get.then((value) => {\n    //   this.val$ = value;\n    //   this.price = parseInt(this.val$[\"Global Quote\"][\"05. price\"]) * 79;\n    // })\n\n    // New Logic\n    this.backservice.getprice(Form.value.stock).subscribe((values: any) => {\n      this.val$ = values;\n      // console.log(values[\"Global Quote\"]);\n      this.stockData = values[\"Global Quote\"];\n      console.log(this.stockData);\n      this.price = parseInt(this.val$['Global Quote']['05. price']) * 79;\n      this.condition=true;\n    });\n  }\n\n  // ************************** ADD USER BUYING FUNCTION *************************\n\n  add_userdetail(Form: FormGroup) {\n    let pricef: any;\n    console.log(typeof Form.value.qty);\n    this.backservice.getprice(Form.value.stock).subscribe((value) => {\n      this.val$ = value;\n      pricef =\n        Form.value.qty * parseInt(this.val$['Global Quote']['05. price']) * 79;\n        this.backservice\n          .adduser(this.email, Form.value.stock, Form.value.qty, pricef)\n          .subscribe((value1: any) => {\n            console.log(value1);\n            if (value1['inres'] == 'successfully updated') {\n              this.toastr.success('Stock purchase successful!');\n              if (this.click == 1) {\n                document.getElementById('forclickremove1')?.remove();\n                document.getElementById('forclickremove2')?.remove();\n                this.click = 0;\n                this.status();\n                this.myForm.reset();\n              }\n            } else {\n              this.toastr.error('Select correct stock!');\n              Form.reset();\n            }\n          });\n    });\n  }\n\n  //*********************** GET THE STATUS OF USER BUYING FUNCTION ***************************\n\n  status() {\n    this.router.navigateByUrl('/status');\n\n  }\n\n  // ****************************** SELL STOCK FUNCTION **********************************\n\n  sellstock(Form: FormGroup) {\n    let color = 'danger';\n    let quote = 'loss';\n    this.backservice\n      .sell(this.email, Form.value.stock, Form.value.qty)\n      .subscribe((value: any) => {\n        if (value['pl'] != 'Please enter correct name or qty') {\n          this.pl = value['pl'];\n          console.log(typeof value['pl']);\n          if (parseInt(this.pl) > 0) {\n            color = 'success';\n            quote = 'profit';\n          }\n          const box = document.getElementById('pl');\n          const el = document.createElement('li');\n          el.setAttribute('class', `list-group-item list-group-item-${color}`);\n          el.innerHTML = `You have sell on the ${quote} of ${this.pl}`;\n          box?.append(el);\n          Form.reset();\n          if (this.click == 1) {\n            document.getElementById('forclickremove1')?.remove();\n            document.getElementById('forclickremove2')?.remove();\n            this.click = 0;\n            this.status();\n          }\n        } else {\n          const box1 = document.getElementById('alertnq');\n          const el1 = document.createElement('div');\n          el1.innerHTML = ` <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            Please enter correct name or quantity\n           <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n         </div>`;\n          box1?.append(el1);\n          Form.reset();\n        }\n      });\n  }\n\n  // ********************** LOGOUT FUNCTION ***********************************\n\n  logout() {\n    ls.remove('#qwAs?.,s');\n    ls.remove('qsc@1!%^36');\n    this.router.navigateByUrl('/');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}