{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass BackService {\n  constructor(_http) {\n    this._http = _http;\n    this.status = false;\n    this.email = \"\";\n  }\n  communicatemessage(msg) {\n    console.log(\"Communicate message is called\");\n    this.email = msg;\n  }\n  // ****************** GET PRICE**************************************\n  getprice(name) {\n    console.log(\"getprice service function is called\");\n    return this._http.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${name}&apikey=TM0KKBA3TUNIU9US`);\n  }\n  // ********************* ADDUSER **************************************\n  adduser(email, stock, qty, invested) {\n    console.log(\"Add user function is called...\");\n    return this._http.post(\"http://localhost:3000/user\", {\n      id: email,\n      stockname: stock,\n      qty: qty,\n      invested: invested\n    });\n  }\n  // ************** GET STATUS *****************************************\n  getstatus(email) {\n    console.log(\"Get status is called\");\n    return this._http.get(`http://localhost:3000/getstatus?id=${email}`);\n  }\n  // ****************** SELL ******************************************\n  sell(email, stock, qty) {\n    console.log(\"Back service of email is called\");\n    return this._http.post(\"http://localhost:3000/sell\", {\n      id: email,\n      name: stock,\n      qty: qty\n    });\n  }\n  // ***************** LOGIN ******************************************\n  login(email, password) {\n    console.log(\"back service login function called...\" + email + password);\n    return this._http.post(\"http://localhost:3000/login\", {\n      email: email,\n      password: password\n    });\n  }\n  // ******************* SIGNUP ******************************************\n  signup(email, password) {\n    console.log(\"back service signup function is called..\");\n    return this._http.post(\"http://localhost:3000/signup\", {\n      email: email,\n      password: password\n    });\n  }\n  // ******************* RESET PASSWORD ***********************************\n  resetpassword(email) {\n    return this._http.get(`http://localhost:3000/resetpassword?email=${email}`);\n  }\n}\nBackService.ɵfac = function BackService_Factory(t) {\n  return new (t || BackService)(i0.ɵɵinject(i1.HttpClient));\n};\nBackService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BackService,\n  factory: BackService.ɵfac,\n  providedIn: 'root'\n});\nexport { BackService };","map":{"version":3,"names":["BackService","constructor","_http","status","email","communicatemessage","msg","console","log","getprice","name","get","adduser","stock","qty","invested","post","id","stockname","getstatus","sell","login","password","signup","resetpassword","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/bhavi/StockArgus/src/app/back.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackService {\n\n  status=false;\n  email = \"\";\n  constructor(private _http:HttpClient) {}\n\n  communicatemessage(msg:any){\n    console.log(\"Communicate message is called\");\n    this.email=msg;\n  }\n\n  // ****************** GET PRICE**************************************\n  \n  getprice(name:any):Observable<object>{\n    console.log(\"getprice service function is called\"); \n    return this._http.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${name}&apikey=TM0KKBA3TUNIU9US`); \n  }\n\n// ********************* ADDUSER **************************************\n\n  adduser(email:any,stock:any,qty:any,invested:any):Observable<object>{\n    console.log(\"Add user function is called...\");\n    return this._http.post(\"http://localhost:3000/user\",{id:email,stockname:stock,qty:qty,invested:invested}); \n  }\n\n  // ************** GET STATUS *****************************************\n\n  getstatus(email:any):Observable<object>{\n    console.log(\"Get status is called\");\n    return this._http.get(`http://localhost:3000/getstatus?id=${email}`)\n  }\n\n  // ****************** SELL ******************************************\n\n  sell(email:any,stock:any,qty:any):Observable<object>{\n    console.log(\"Back service of email is called\");\n    return this._http.post(\"http://localhost:3000/sell\",{id:email,name:stock,qty:qty});\n  }\n\n  // ***************** LOGIN ******************************************\n\n  login(email:any,password:any):Observable<object>{\n    console.log(\"back service login function called...\"+email+password);\n    return this._http.post(\"http://localhost:3000/login\",{email:email,password:password});\n  }\n\n// ******************* SIGNUP ******************************************\n\n  signup(email:any,password:any):Observable<object>{\n    console.log(\"back service signup function is called..\")\n    return this._http.post(\"http://localhost:3000/signup\",{email:email,password:password});\n  }\n\n// ******************* RESET PASSWORD ***********************************\n\n  resetpassword(email:any):Observable<object>{\n    return this._http.get(`http://localhost:3000/resetpassword?email=${email}`);\n  }\n}\n"],"mappings":";;AAIA,MAGaA,WAAW;EAItBC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,MAAM,GAAC,KAAK;IACZ,KAAAC,KAAK,GAAG,EAAE;EAC6B;EAEvCC,kBAAkBA,CAACC,GAAO;IACxBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5C,IAAI,CAACJ,KAAK,GAACE,GAAG;EAChB;EAEA;EAEAG,QAAQA,CAACC,IAAQ;IACfH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAO,IAAI,CAACN,KAAK,CAACS,GAAG,CAAC,kEAAkED,IAAI,0BAA0B,CAAC;EACzH;EAEF;EAEEE,OAAOA,CAACR,KAAS,EAACS,KAAS,EAACC,GAAO,EAACC,QAAY;IAC9CR,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C,OAAO,IAAI,CAACN,KAAK,CAACc,IAAI,CAAC,4BAA4B,EAAC;MAACC,EAAE,EAACb,KAAK;MAACc,SAAS,EAACL,KAAK;MAACC,GAAG,EAACA,GAAG;MAACC,QAAQ,EAACA;IAAQ,CAAC,CAAC;EAC3G;EAEA;EAEAI,SAASA,CAACf,KAAS;IACjBG,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,OAAO,IAAI,CAACN,KAAK,CAACS,GAAG,CAAC,sCAAsCP,KAAK,EAAE,CAAC;EACtE;EAEA;EAEAgB,IAAIA,CAAChB,KAAS,EAACS,KAAS,EAACC,GAAO;IAC9BP,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAO,IAAI,CAACN,KAAK,CAACc,IAAI,CAAC,4BAA4B,EAAC;MAACC,EAAE,EAACb,KAAK;MAACM,IAAI,EAACG,KAAK;MAACC,GAAG,EAACA;IAAG,CAAC,CAAC;EACpF;EAEA;EAEAO,KAAKA,CAACjB,KAAS,EAACkB,QAAY;IAC1Bf,OAAO,CAACC,GAAG,CAAC,uCAAuC,GAACJ,KAAK,GAACkB,QAAQ,CAAC;IACnE,OAAO,IAAI,CAACpB,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAC;MAACZ,KAAK,EAACA,KAAK;MAACkB,QAAQ,EAACA;IAAQ,CAAC,CAAC;EACvF;EAEF;EAEEC,MAAMA,CAACnB,KAAS,EAACkB,QAAY;IAC3Bf,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACvD,OAAO,IAAI,CAACN,KAAK,CAACc,IAAI,CAAC,8BAA8B,EAAC;MAACZ,KAAK,EAACA,KAAK;MAACkB,QAAQ,EAACA;IAAQ,CAAC,CAAC;EACxF;EAEF;EAEEE,aAAaA,CAACpB,KAAS;IACrB,OAAO,IAAI,CAACF,KAAK,CAACS,GAAG,CAAC,6CAA6CP,KAAK,EAAE,CAAC;EAC7E;;AAzDWJ,WAAW,C;mBAAXA,WAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP/B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}